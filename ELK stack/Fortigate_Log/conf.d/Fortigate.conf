input {
  udp {
    port => 514
   # tags => "FWlog"
  }
}

filter { 
    if "fortigate" in [tags] {
      grok { 
        match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"] 
        overwrite => [ "message" ] 
      } 
    
      date { 
        match => ["timestamp" , "yyyy-MM-dd'T'HH:mm:ss.SSSZ"] 
        target => "@timestamp" 
        #add_field => { "debug" => "timestampMatched"} 
      } 
    
      kv { 
        source => "message" 
        source => "message"
        value_split => "="
        field_split => " "
        include_brackets => false
        trim_value => "\""
        #exclude_keys => [ "type", "tags"]
        #include_keys => [ "type", "subtype", "level", "msg", "user", "eventtype", "remip", "devname" , "date", "logdesc", "status", "stage", "result", "locip", "action", "outinf", "dhcp_msg" , "ip", "hostname", "interface", "mac" ]
      } 

      if [level] == "notice" or [level] == "information" {
        drop { }
      }

      if [type] == "event" and [subtype] == "system" {
        mutate {
          add_tag => ["system_event"]
        }
      }

      if [type] == "event" and [subtype] == "vpn" {
        mutate {
          add_tag => ["vpn_event"]
          rename => { "remip" => "remote_ip" }
        }
        geoip {
          source => "remote_ip"
          target => "geoip"
        }
      }

      geoip { source => "dst" } 
      geoip { source => "dstip" } 
      geoip { source => "src" } 
      geoip { source => "srcip" } 
    
      mutate { 
        rename => {
          "dst" => "dst_ip"
          "dstip" => "dst_ip"
          "dstport" => "dst_port"
          "devname" => "device_id"
          "status" => "action"
          "src" => "src_ip"
          "srcip" => "src_ip"
          "zone" => "src_intf"
          "srcintf" => "src_intf"
          "srcport" => "src_port"
          "rcvd" => "byte_recieved"
          "rcvdbyte" => "bytes_recieved"
          "sentbyte" => "bytes_sent"
          "sent" => "bytes_sent"
          "cpu" => "cpu_usage"
          "mem" => "mem_usage"
          "disk" => "disk_usage"
        }
      
        convert => {
          "bytes_recieved" => "integer"
          "bytes_sent" => "integer"
          "cpu_usage" => "integer"
          "mem_usage" => "integer"
          "disk_usage" => "integer"
          "disklograte" => "integer"
        }
      } 
    }
 }   
    
    ## Add your filters / logstash plugins configuration here
    
output {
  elasticsearch {
      hosts => "elasticsearch:9200"
      #user => "elastic"
      #password => "nim123"
      index => "fwlog-%{+YYYY.MM.dd}" 
    }
    stdout {
    codec => rubydebug
    }
   }
