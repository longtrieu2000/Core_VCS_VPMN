version: "3"
services: 
  prometheus:
    extends:
      file: common.yml
      service: common
    image: prom/prometheus:v2.41.0
    container_name: prometheus-vpmn
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    networks:
      - pro-graf-log
    deploy:
      resources:
        limits:
          memory: 1g

  grafana:
    extends:
      file: common.yml
      service: common
    image: grafana/grafana:9.3.2
    container_name: grafana-vpmn
    ports:
      - 9030:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=devops123
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana
    networks:
      - pro-graf-log
    deploy:
      resources:
        limits:
          memory: 1g

  cadvisor:
    extends:
      file: common.yml
      service: common
    image: google/cadvisor:latest
    container_name: vpmn_cadvisor
   # network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "9010:8080"
    restart: always
    networks:
      - pro-graf-log
    deploy:
      resources:
        limits:
          memory: 1g

  blackbox:
    extends:
      file: common.yml
      service: common
    image: prom/blackbox-exporter
    container_name: VPMN_URL
    privileged: true
    restart: always
    tty: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-backbox.rule=Host(`blackbox_exporter`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-backbox.loadbalancer.server.port=9115
    ports:
      - 9115:9115
    #dns: 8.8.8.8
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox/conf.yml
    networks:
      - pro-graf-log
    deploy:
      resources:
        limits:
          memory: 1g
  
  prometheus-reloader:
    extends:
      file: common.yml
      service: common
    image: curlimages/curl
    container_name: curl-contain
    command: 
      sh -c 'while true; do
        curl -X POST http://prometheus-vpmn:9090/-/reload;
        echo "Reloaded at $(date)";
        sleep 30;
      done'
    depends_on:
      - prometheus
    networks:
      - pro-graf-log
    deploy:
      resources:
        limits:
          memory: 512mb

volumes:
  grafana:

networks:
  pro-graf-log: 
    external: true